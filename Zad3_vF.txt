#include  <msp430x14x.h>

// Ustawienie przyciskow
#define BT1 P4IN&BIT4
#define BT2 P4IN&BIT5  
#define BT3 P4IN&BIT6
#define BT4 P4IN&BIT7

// Zdefiniowanie typu wyliczeniowego dla możliwych diod
enum DIODE_ {DIODE1, DIODE2, DIODE3, DIODE4, DIODE5};
typedef enum DIODE_ DIODE;

// Funkcja gasząca wybraną diodę
void SwitchOFF(DIODE d)
{
    switch(d)
    {
        case(DIODE1):
            P2OUT |= BIT1;
            break;
        case(DIODE2):
            P1OUT &= ~BIT5;
            break;
        case(DIODE3):
            P1OUT &= ~BIT6;
            break;
    }
}


// Funkcja zaświecająca wybraną diodę
void SwitchON(DIODE d)
{
    switch(d){
        case(DIODE1):
            P2OUT &= ~BIT1;
            break;
        case(DIODE2):
            P1OUT |= BIT5;
            break;
        case(DIODE3):
            P1OUT |= BIT6;
            break;
    }
}


void Blink(unsigned long int time,DIODE d)
{
    //Zmienna ulotna, volatile oznacza, że zmienna lub obiekt mogą zostać zmienione "z zewnątrz"
    volatile unsigned int i; 

    for(i=0;i<time;i++)
        SwitchON(d);
    for(i=0;i<time;i++)
        SwitchOFF(d);
}


void main(void)
{
// Zatrzymanie watchdog timer
  WDTCTL = WDTPW + WDTHOLD;             
  
// Ustawienie portów dla diod
P2DIR |= BIT1; 
P1DIR |= BIT5;
P1DIR |= BIT6;
SwitchOFF(DIODE1);
SwitchOFF(DIODE2);
SwitchOFF(DIODE3);

// Ustawienie przycisków
P4DIR &= ~BIT4; 
P4DIR &= ~BIT5;
P4DIR &= ~BIT6;
P4DIR &= ~BIT7;
  
// Zmienna przechowójąca prędkość migania diody
unsigned int freq = 3000;

  while(1)
  {
     Blink(freq,DIODE2);

   if(!(BT2) && freq <= 6000)
     freq = freq + 300;

   if(!(BT3) && freq > 0)
     freq = freq - 300;

  }


}
